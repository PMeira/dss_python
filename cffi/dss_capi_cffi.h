void DSS_ResetStringBuffer();
void DSS_Dispose_PByte(int8_t** p);
void DSS_Dispose_PDouble(double** p);
void DSS_Dispose_PInteger(int32_t** p);
void DSS_Dispose_PPAnsiChar(char ***p, int32_t cnt);

void ActiveClass_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
int32_t ActiveClass_Get_First();
int32_t ActiveClass_Get_Next();
char* ActiveClass_Get_Name();
void ActiveClass_Set_Name(char* Value);
int32_t ActiveClass_Get_NumElements();
char* ActiveClass_Get_ActiveClassName();
int32_t ActiveClass_Get_Count();
char* Bus_Get_Name();
int32_t Bus_Get_NumNodes();
void Bus_Get_SeqVoltages(double** ResultPtr, int32_t* ResultCount);
void Bus_Get_Voltages(double** ResultPtr, int32_t* ResultCount);
void Bus_Get_Nodes(int32_t** ResultPtr, int32_t* ResultCount);
void Bus_Get_Isc(double** ResultPtr, int32_t* ResultCount);
void Bus_Get_Voc(double** ResultPtr, int32_t* ResultCount);
double Bus_Get_kVBase();
void Bus_Get_puVoltages(double** ResultPtr, int32_t* ResultCount);
void Bus_Get_Zsc0(double** ResultPtr, int32_t* ResultCount);
void Bus_Get_Zsc1(double** ResultPtr, int32_t* ResultCount);
void Bus_Get_ZscMatrix(double** ResultPtr, int32_t* ResultCount);
uint16_t Bus_ZscRefresh();
void Bus_Get_YscMatrix(double** ResultPtr, int32_t* ResultCount);
uint16_t Bus_Get_Coorddefined();
double Bus_Get_x();
void Bus_Set_x(double Value);
double Bus_Get_y();
void Bus_Set_y(double Value);
double Bus_Get_Distance();
int32_t Bus_GetUniqueNodeNumber(int32_t StartNumber);
void Bus_Get_CplxSeqVoltages(double** ResultPtr, int32_t* ResultCount);
double Bus_Get_Int_Duration();
double Bus_Get_Lambda();
double Bus_Get_Cust_Duration();
double Bus_Get_Cust_Interrupts();
int32_t Bus_Get_N_Customers();
double Bus_Get_N_interrupts();
void Bus_Get_puVLL(double** ResultPtr, int32_t* ResultCount);
void Bus_Get_VLL(double** ResultPtr, int32_t* ResultCount);
void Bus_Get_puVmagAngle(double** ResultPtr, int32_t* ResultCount);
void Bus_Get_VMagAngle(double** ResultPtr, int32_t* ResultCount);
double Bus_Get_TotalMiles();
int32_t Bus_Get_SectionID();
void Capacitors_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
int32_t Capacitors_Get_First();
uint16_t Capacitors_Get_IsDelta();
double Capacitors_Get_kV();
double Capacitors_Get_kvar();
char* Capacitors_Get_Name();
int32_t Capacitors_Get_Next();
int32_t Capacitors_Get_NumSteps();
void Capacitors_Set_IsDelta(uint16_t Value);
void Capacitors_Set_kV(double Value);
void Capacitors_Set_kvar(double Value);
void Capacitors_Set_Name(char* Value);
void Capacitors_Set_NumSteps(int32_t Value);
int32_t Capacitors_Get_Count();
uint16_t Capacitors_AddStep();
uint16_t Capacitors_SubtractStep();
int32_t Capacitors_Get_AvailableSteps();
void Capacitors_Get_States(int32_t** ResultPtr, int32_t* ResultCount);
void Capacitors_Set_States(int32_t* ValuePtr, int32_t ValueCount);
void Capacitors_Open();
void Capacitors_Close();
void CapControls_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
char* CapControls_Get_Capacitor();
double CapControls_Get_CTratio();
double CapControls_Get_DeadTime();
double CapControls_Get_Delay();
double CapControls_Get_DelayOff();
int32_t CapControls_Get_First();
int32_t CapControls_Get_Mode();
char* CapControls_Get_MonitoredObj();
int32_t CapControls_Get_MonitoredTerm();
char* CapControls_Get_Name();
int32_t CapControls_Get_Next();
double CapControls_Get_OFFSetting();
double CapControls_Get_ONSetting();
double CapControls_Get_PTratio();
uint16_t CapControls_Get_UseVoltOverride();
double CapControls_Get_Vmax();
double CapControls_Get_Vmin();
void CapControls_Set_Capacitor(char* Value);
void CapControls_Set_CTratio(double Value);
void CapControls_Set_DeadTime(double Value);
void CapControls_Set_Delay(double Value);
void CapControls_Set_DelayOff(double Value);
void CapControls_Set_Mode(int32_t Value);
void CapControls_Set_MonitoredObj(char* Value);
void CapControls_Set_MonitoredTerm(int32_t Value);
void CapControls_Set_Name(char* Value);
void CapControls_Set_OFFSetting(double Value);
void CapControls_Set_ONSetting(double Value);
void CapControls_Set_PTratio(double Value);
void CapControls_Set_UseVoltOverride(uint16_t Value);
void CapControls_Set_Vmax(double Value);
void CapControls_Set_Vmin(double Value);
int32_t CapControls_Get_Count();
void CapControls_Reset();
char* Circuit_Get_Name();
int32_t Circuit_Get_NumBuses();
int32_t Circuit_Get_NumCktElements();
int32_t Circuit_Get_NumNodes();
void Circuit_Get_LineLosses(double** ResultPtr, int32_t* ResultCount);
void Circuit_Get_Losses(double** ResultPtr, int32_t* ResultCount);
void Circuit_Get_AllBusVmag(double** ResultPtr, int32_t* ResultCount);
void Circuit_Get_AllBusVolts(double** ResultPtr, int32_t* ResultCount);
void Circuit_Get_AllElementNames(char*** ResultPtr, int32_t* ResultCount);
void Circuit_Get_SubstationLosses(double** ResultPtr, int32_t* ResultCount);
void Circuit_Get_TotalPower(double** ResultPtr, int32_t* ResultCount);
void Circuit_Disable(char* Name);
void Circuit_Enable(char* Name);
int32_t Circuit_FirstPCElement();
int32_t Circuit_FirstPDElement();
int32_t Circuit_NextPCElement();
int32_t Circuit_NextPDElement();
void Circuit_Get_AllBusNames(char*** ResultPtr, int32_t* ResultCount);
void Circuit_Get_AllElementLosses(double** ResultPtr, int32_t* ResultCount);
void Circuit_Sample();
void Circuit_SaveSample();
int32_t Circuit_SetActiveElement(char* FullName);
double Circuit_Capacity(double Start, double Increment);
void Circuit_Get_AllBusVmagPu(double** ResultPtr, int32_t* ResultCount);
int32_t Circuit_SetActiveBus(char* BusName);
int32_t Circuit_SetActiveBusi(int32_t BusIndex);
void Circuit_Get_AllNodeNames(char*** ResultPtr, int32_t* ResultCount);
void Circuit_Get_SystemY(double** ResultPtr, int32_t* ResultCount);
void Circuit_Get_AllBusDistances(double** ResultPtr, int32_t* ResultCount);
void Circuit_Get_AllNodeDistances(double** ResultPtr, int32_t* ResultCount);
void Circuit_Get_AllNodeDistancesByPhase(double** ResultPtr, int32_t* ResultCount, int32_t Phase);
void Circuit_Get_AllNodeVmagByPhase(double** ResultPtr, int32_t* ResultCount, int32_t Phase);
void Circuit_Get_AllNodeVmagPUByPhase(double** ResultPtr, int32_t* ResultCount, int32_t Phase);
void Circuit_Get_AllNodeNamesByPhase(char*** ResultPtr, int32_t* ResultCount, int32_t Phase);
int32_t Circuit_SetActiveClass(char* ClassName);
int32_t Circuit_FirstElement();
int32_t Circuit_NextElement();
void Circuit_UpdateStorage();
int32_t Circuit_Get_ParentPDElement();
void Circuit_EndOfTimeStepUpdate();
void Circuit_Get_YNodeOrder(char*** ResultPtr, int32_t* ResultCount);
void Circuit_Get_YCurrents(double** ResultPtr, int32_t* ResultCount);
void Circuit_Get_YNodeVarray(double** ResultPtr, int32_t* ResultCount);
void CktElement_Get_BusNames(char*** ResultPtr, int32_t* ResultCount);
char* CktElement_Get_Name();
int32_t CktElement_Get_NumConductors();
int32_t CktElement_Get_NumPhases();
int32_t CktElement_Get_NumTerminals();
void CktElement_Set_BusNames(char** ValuePtr, int32_t ValueCount);
void CktElement_Get_Currents(double** ResultPtr, int32_t* ResultCount);
void CktElement_Get_Voltages(double** ResultPtr, int32_t* ResultCount);
double CktElement_Get_EmergAmps();
uint16_t CktElement_Get_Enabled();
void CktElement_Get_Losses(double** ResultPtr, int32_t* ResultCount);
double CktElement_Get_NormalAmps();
void CktElement_Get_PhaseLosses(double** ResultPtr, int32_t* ResultCount);
void CktElement_Get_Powers(double** ResultPtr, int32_t* ResultCount);
void CktElement_Get_SeqCurrents(double** ResultPtr, int32_t* ResultCount);
void CktElement_Get_SeqPowers(double** ResultPtr, int32_t* ResultCount);
void CktElement_Get_SeqVoltages(double** ResultPtr, int32_t* ResultCount);
void CktElement_Close(int32_t Term, int32_t Phs);
void CktElement_Open(int32_t Term, int32_t Phs);
void CktElement_Set_EmergAmps(double Value);
void CktElement_Set_Enabled(uint16_t Value);
void CktElement_Set_NormalAmps(double Value);
uint16_t CktElement_IsOpen(int32_t Term, int32_t Phs);
void CktElement_Get_AllPropertyNames(char*** ResultPtr, int32_t* ResultCount);
int32_t CktElement_Get_NumProperties();
void CktElement_Get_Residuals(double** ResultPtr, int32_t* ResultCount);
void CktElement_Get_Yprim(double** ResultPtr, int32_t* ResultCount);
char* CktElement_Get_DisplayName();
char* CktElement_Get_GUID();
int32_t CktElement_Get_Handle();
void CktElement_Set_DisplayName(char* Value);
char* CktElement_Get_Controller(int32_t idx);
char* CktElement_Get_EnergyMeter();
uint16_t CktElement_Get_HasVoltControl();
uint16_t CktElement_Get_HasSwitchControl();
void CktElement_Get_CplxSeqVoltages(double** ResultPtr, int32_t* ResultCount);
void CktElement_Get_CplxSeqCurrents(double** ResultPtr, int32_t* ResultCount);
void CktElement_Get_AllVariableNames(char*** ResultPtr, int32_t* ResultCount);
void CktElement_Get_AllVariableValues(double** ResultPtr, int32_t* ResultCount);
double CktElement_Get_Variable(char* MyVarName, int32_t Code);
double CktElement_Get_Variablei(int32_t Idx, int32_t Code);
void CktElement_Get_NodeOrder(int32_t** ResultPtr, int32_t* ResultCount);
uint16_t CktElement_Get_HasOCPDevice();
int32_t CktElement_Get_NumControls();
int32_t CktElement_Get_OCPDevIndex();
int32_t CktElement_Get_OCPDevType();
void CktElement_Get_CurrentsMagAng(double** ResultPtr, int32_t* ResultCount);
void CktElement_Get_VoltagesMagAng(double** ResultPtr, int32_t* ResultCount);
void CmathLib_Get_cmplx(double** ResultPtr, int32_t* ResultCount, double RealPart, double ImagPart);
double CmathLib_Get_cabs(double realpart, double imagpart);
double CmathLib_Get_cdang(double RealPart, double ImagPart);
void CmathLib_Get_ctopolardeg(double** ResultPtr, int32_t* ResultCount, double RealPart, double ImagPart);
void CmathLib_Get_pdegtocomplex(double** ResultPtr, int32_t* ResultCount, double magnitude, double angle);
void CmathLib_Get_cmul(double** ResultPtr, int32_t* ResultCount, double a1, double b1, double a2, double b2);
void CmathLib_Get_cdiv(double** ResultPtr, int32_t* ResultCount, double a1, double b1, double a2, double b2);
// void CtrlQueue_ClearQueue();
// void CtrlQueue_Delete(int32_t ActionHandle);
// int32_t CtrlQueue_Get_ActionCode();
// int32_t CtrlQueue_Get_DeviceHandle();
// int32_t CtrlQueue_Get_NumActions();
// void CtrlQueue_Show();
// void CtrlQueue_ClearActions();
// int32_t CtrlQueue_Get_PopAction();
// void CtrlQueue_Set_Action(int32_t Param1);
// int32_t CtrlQueue_Get_QueueSize();
// void CtrlQueue_DoAllQueue();
// void CtrlQueue_Get_Queue(char*** ResultPtr, int32_t* ResultCount);
int32_t DSS_Get_NumCircuits();
void DSS_ClearAll();
char* DSS_Get_Version();
uint16_t DSS_Start(int32_t code);
void DSS_Get_Classes(char*** ResultPtr, int32_t* ResultCount);
void DSS_Get_UserClasses(char*** ResultPtr, int32_t* ResultCount);
int32_t DSS_Get_NumClasses();
int32_t DSS_Get_NumUserClasses();
char* DSS_Get_DataPath();
void DSS_Set_DataPath(char* Value);
void DSS_Reset();
char* DSS_Get_DefaultEditor();
int32_t DSS_SetActiveClass(char* ClassName);
void DSSElement_Get_AllPropertyNames(char*** ResultPtr, int32_t* ResultCount);
char* DSSElement_Get_Name();
int32_t DSSElement_Get_NumProperties();
void DSSimComs_BusVoltagepu(double** ResultPtr, int32_t* ResultCount, size_t Index);
void DSSimComs_BusVoltage(double** ResultPtr, int32_t* ResultCount, size_t Index);
// char* DSSMain_Get_ActiveCircuit();
// int32_t DSSMain_Get_NumCircuits();
// void DSSMain_Set_ActiveCircuit(char* Value);
// void DSSProgress_Close();
// void DSSProgress_Set_Caption(char* Value);
// void DSSProgress_Set_PctProgress(int32_t Value);
// void DSSProgress_Show();
// char* DSSProperty_Get_Description();
// char* DSSProperty_Get_Name();
// char* DSSProperty_Get_Val();
// void DSSProperty_Set_Val(char* Value);
char* DSS_Executive_Get_Command(int32_t i);
int32_t DSS_Executive_Get_NumCommands();
int32_t DSS_Executive_Get_NumOptions();
char* DSS_Executive_Get_Option(int32_t i);
char* DSS_Executive_Get_CommandHelp(int32_t i);
char* DSS_Executive_Get_OptionHelp(int32_t i);
char* DSS_Executive_Get_OptionValue(int32_t i);
char* Error_Get_Description();
int32_t Error_Get_Number();
void Fuses_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
int32_t Fuses_Get_Count();
int32_t Fuses_Get_First();
char* Fuses_Get_Name();
int32_t Fuses_Get_Next();
void Fuses_Set_Name(char* Value);
char* Fuses_Get_MonitoredObj();
int32_t Fuses_Get_MonitoredTerm();
char* Fuses_Get_SwitchedObj();
void Fuses_Set_MonitoredObj(char* Value);
void Fuses_Set_MonitoredTerm(int32_t Value);
void Fuses_Set_SwitchedObj(char* Value);
int32_t Fuses_Get_SwitchedTerm();
void Fuses_Set_SwitchedTerm(int32_t Value);
char* Fuses_Get_TCCcurve();
void Fuses_Set_TCCcurve(char* Value);
double Fuses_Get_RatedCurrent();
void Fuses_Set_RatedCurrent(double Value);
double Fuses_Get_Delay();
void Fuses_Open();
void Fuses_Close();
void Fuses_Set_Delay(double Value);
int32_t Fuses_Get_idx();
void Fuses_Set_idx(int32_t Value);
int32_t Fuses_Get_NumPhases();
void Generators_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
int32_t Generators_Get_First();
char* Generators_Get_Name();
int32_t Generators_Get_Next();
void Generators_Get_RegisterNames(char*** ResultPtr, int32_t* ResultCount);
void Generators_Get_RegisterValues(double** ResultPtr, int32_t* ResultCount);
uint16_t Generators_Get_ForcedON();
void Generators_Set_ForcedON(uint16_t Value);
void Generators_Set_Name(char* Value);
double Generators_Get_kV();
double Generators_Get_kvar();
double Generators_Get_kW();
double Generators_Get_PF();
int32_t Generators_Get_Phases();
void Generators_Set_kV(double Value);
void Generators_Set_kvar(double Value);
void Generators_Set_kW(double Value);
void Generators_Set_PF(double Value);
void Generators_Set_Phases(int32_t Value);
int32_t Generators_Get_Count();
int32_t Generators_Get_idx();
void Generators_Set_idx(int32_t Value);
int32_t Generators_Get_Model();
void Generators_Set_Model(int32_t Value);
double Generators_Get_kVArated();
void Generators_Set_kVArated(double Value);
double Generators_Get_Vmaxpu();
double Generators_Get_Vminpu();
void Generators_Set_Vmaxpu(double Value);
void Generators_Set_Vminpu(double Value);
void ISources_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
int32_t ISources_Get_Count();
int32_t ISources_Get_First();
int32_t ISources_Get_Next();
char* ISources_Get_Name();
void ISources_Set_Name(char* Value);
double ISources_Get_Amps();
void ISources_Set_Amps(double Value);
double ISources_Get_AngleDeg();
double ISources_Get_Frequency();
void ISources_Set_AngleDeg(double Value);
void ISources_Set_Frequency(double Value);
int32_t LineCodes_Get_Count();
int32_t LineCodes_Get_First();
int32_t LineCodes_Get_Next();
char* LineCodes_Get_Name();
void LineCodes_Set_Name(char* Value);
uint16_t LineCodes_Get_IsZ1Z0();
int32_t LineCodes_Get_Units();
void LineCodes_Set_Units(int32_t Value);
int32_t LineCodes_Get_Phases();
void LineCodes_Set_Phases(int32_t Value);
double LineCodes_Get_R1();
void LineCodes_Set_R1(double Value);
double LineCodes_Get_X1();
void LineCodes_Set_X1(double Value);
double LineCodes_Get_R0();
double LineCodes_Get_X0();
void LineCodes_Set_R0(double Value);
void LineCodes_Set_X0(double Value);
double LineCodes_Get_C0();
double LineCodes_Get_C1();
void LineCodes_Set_C0(double Value);
void LineCodes_Set_C1(double Value);
void LineCodes_Get_Cmatrix(double** ResultPtr, int32_t* ResultCount);
void LineCodes_Get_Rmatrix(double** ResultPtr, int32_t* ResultCount);
void LineCodes_Get_Xmatrix(double** ResultPtr, int32_t* ResultCount);
void LineCodes_Set_Cmatrix(double* ValuePtr, int32_t ValueCount);
void LineCodes_Set_Rmatrix(double* ValuePtr, int32_t ValueCount);
void LineCodes_Set_Xmatrix(double* ValuePtr, int32_t ValueCount);
double LineCodes_Get_NormAmps();
void LineCodes_Set_NormAmps(double Value);
double LineCodes_Get_EmergAmps();
void LineCodes_Set_EmergAmps(double Value);
void LineCodes_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
void Lines_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
char* Lines_Get_Bus1();
char* Lines_Get_Bus2();
int32_t Lines_Get_First();
double Lines_Get_Length();
char* Lines_Get_LineCode();
char* Lines_Get_Name();
int32_t Lines_Get_Next();
int32_t Lines_Get_Phases();
double Lines_Get_R1();
double Lines_Get_X1();
int32_t Lines_New(char* Name);
void Lines_Set_Bus1(char* Value);
void Lines_Set_Bus2(char* Value);
void Lines_Set_Length(double Value);
void Lines_Set_LineCode(char* Value);
void Lines_Set_Name(char* Value);
void Lines_Set_Phases(int32_t Value);
void Lines_Set_R1(double Value);
void Lines_Set_X1(double Value);
double Lines_Get_C0();
double Lines_Get_C1();
void Lines_Get_Cmatrix(double** ResultPtr, int32_t* ResultCount);
double Lines_Get_R0();
void Lines_Get_Rmatrix(double** ResultPtr, int32_t* ResultCount);
double Lines_Get_X0();
void Lines_Get_Xmatrix(double** ResultPtr, int32_t* ResultCount);
void Lines_Set_C0(double Value);
void Lines_Set_C1(double Value);
void Lines_Set_Cmatrix(double* ValuePtr, int32_t ValueCount);
void Lines_Set_R0(double Value);
void Lines_Set_Rmatrix(double* ValuePtr, int32_t ValueCount);
void Lines_Set_X0(double Value);
void Lines_Set_Xmatrix(double* ValuePtr, int32_t ValueCount);
double Lines_Get_EmergAmps();
double Lines_Get_NormAmps();
void Lines_Set_EmergAmps(double Value);
void Lines_Set_NormAmps(double Value);
char* Lines_Get_Geometry();
void Lines_Set_Geometry(char* Value);
double Lines_Get_Rg();
double Lines_Get_Rho();
double Lines_Get_Xg();
void Lines_Set_Rg(double Value);
void Lines_Set_Rho(double Value);
void Lines_Set_Xg(double Value);
void Lines_Get_Yprim(double** ResultPtr, int32_t* ResultCount);
void Lines_Set_Yprim(double* ValuePtr, int32_t ValueCount);
int32_t Lines_Get_NumCust();
int32_t Lines_Get_TotalCust();
int32_t Lines_Get_Parent();
int32_t Lines_Get_Count();
char* Lines_Get_Spacing();
void Lines_Set_Spacing(char* Value);
int32_t Lines_Get_Units();
void Lines_Set_Units(int32_t Value);
void Loads_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
int32_t Loads_Get_First();
int32_t Loads_Get_idx();
char* Loads_Get_Name();
int32_t Loads_Get_Next();
void Loads_Set_idx(int32_t Value);
void Loads_Set_Name(char* Value);
double Loads_Get_kV();
double Loads_Get_kvar();
double Loads_Get_kW();
double Loads_Get_PF();
void Loads_Set_kV(double Value);
void Loads_Set_kvar(double Value);
void Loads_Set_kW(double Value);
void Loads_Set_PF(double Value);
int32_t Loads_Get_Count();
double Loads_Get_AllocationFactor();
double Loads_Get_Cfactor();
int32_t Loads_Get_Class_();
char* Loads_Get_CVRcurve();
double Loads_Get_CVRvars();
double Loads_Get_CVRwatts();
char* Loads_Get_daily();
char* Loads_Get_duty();
char* Loads_Get_Growth();
uint16_t Loads_Get_IsDelta();
double Loads_Get_kva();
double Loads_Get_kwh();
double Loads_Get_kwhdays();
int32_t Loads_Get_Model();
int32_t Loads_Get_NumCust();
double Loads_Get_PctMean();
double Loads_Get_PctStdDev();
double Loads_Get_Rneut();
char* Loads_Get_Spectrum();
int32_t Loads_Get_Status();
double Loads_Get_Vmaxpu();
double Loads_Get_Vminemerg();
double Loads_Get_Vminnorm();
double Loads_Get_Vminpu();
double Loads_Get_xfkVA();
double Loads_Get_Xneut();
char* Loads_Get_Yearly();
void Loads_Set_AllocationFactor(double Value);
void Loads_Set_Cfactor(double Value);
void Loads_Set_Class_(int32_t Value);
void Loads_Set_CVRcurve(char* Value);
void Loads_Set_CVRvars(double Value);
void Loads_Set_CVRwatts(double Value);
void Loads_Set_daily(char* Value);
void Loads_Set_duty(char* Value);
void Loads_Set_Growth(char* Value);
void Loads_Set_IsDelta(uint16_t Value);
void Loads_Set_kva(double Value);
void Loads_Set_kwh(double Value);
void Loads_Set_kwhdays(double Value);
void Loads_Set_Model(int32_t Value);
void Loads_Set_NumCust(int32_t Value);
void Loads_Set_PctMean(double Value);
void Loads_Set_PctStdDev(double Value);
void Loads_Set_Rneut(double Value);
void Loads_Set_Spectrum(char* Value);
void Loads_Set_Status(int32_t Value);
void Loads_Set_Vmaxpu(double Value);
void Loads_Set_Vminemerg(double Value);
void Loads_Set_Vminnorm(double Value);
void Loads_Set_Vminpu(double Value);
void Loads_Set_xfkVA(double Value);
void Loads_Set_Xneut(double Value);
void Loads_Set_Yearly(char* Value);
void Loads_Get_ZIPV(double** ResultPtr, int32_t* ResultCount);
void Loads_Set_ZIPV(double* ValuePtr, int32_t ValueCount);
double Loads_Get_pctSeriesRL();
void Loads_Set_pctSeriesRL(double Value);
double Loads_Get_RelWeight();
char* LoadShapes_Get_Name();
void LoadShapes_Set_Name(char* Value);
int32_t LoadShapes_Get_Count();
int32_t LoadShapes_Get_First();
int32_t LoadShapes_Get_Next();
void LoadShapes_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
int32_t LoadShapes_Get_Npts();
void LoadShapes_Get_Pmult(double** ResultPtr, int32_t* ResultCount);
void LoadShapes_Get_Qmult(double** ResultPtr, int32_t* ResultCount);
void LoadShapes_Set_Npts(int32_t Value);
void LoadShapes_Set_Pmult(double* ValuePtr, int32_t ValueCount);
void LoadShapes_Set_Qmult(double* ValuePtr, int32_t ValueCount);
void LoadShapes_Normalize();
void LoadShapes_Get_TimeArray(double** ResultPtr, int32_t* ResultCount);
void LoadShapes_Set_TimeArray(double* ValuePtr, int32_t ValueCount);
double LoadShapes_Get_HrInterval();
double LoadShapes_Get_MinInterval();
double LoadShapes_Get_sInterval();
void LoadShapes_Set_HrInterval(double Value);
void LoadShapes_Set_MinInterval(double Value);
void LoadShapes_Set_Sinterval(double Value);
double LoadShapes_Get_PBase();
double LoadShapes_Get_Qbase();
void LoadShapes_Set_PBase(double Value);
void LoadShapes_Set_Qbase(double Value);
uint16_t LoadShapes_Get_UseActual();
void LoadShapes_Set_UseActual(uint16_t Value);
void Meters_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
int32_t Meters_Get_First();
char* Meters_Get_Name();
int32_t Meters_Get_Next();
void Meters_Get_RegisterNames(char*** ResultPtr, int32_t* ResultCount);
void Meters_Get_RegisterValues(double** ResultPtr, int32_t* ResultCount);
void Meters_Reset();
void Meters_ResetAll();
void Meters_Sample();
void Meters_Save();
void Meters_Set_Name(char* Value);
void Meters_Get_Totals(double** ResultPtr, int32_t* ResultCount);
void Meters_Get_Peakcurrent(double** ResultPtr, int32_t* ResultCount);
void Meters_Set_Peakcurrent(double* ValuePtr, int32_t ValueCount);
void Meters_Get_CalcCurrent(double** ResultPtr, int32_t* ResultCount);
void Meters_Set_CalcCurrent(double* ValuePtr, int32_t ValueCount);
void Meters_Get_AllocFactors(double** ResultPtr, int32_t* ResultCount);
void Meters_Set_AllocFactors(double* ValuePtr, int32_t ValueCount);
char* Meters_Get_MeteredElement();
int32_t Meters_Get_MeteredTerminal();
void Meters_Set_MeteredElement(char* Value);
void Meters_Set_MeteredTerminal(int32_t Value);
uint16_t Meters_Get_DIFilesAreOpen();
void Meters_CloseAllDIFiles();
void Meters_OpenAllDIFiles();
void Meters_SampleAll();
void Meters_SaveAll();
void Meters_Get_AllEndElements(char*** ResultPtr, int32_t* ResultCount);
int32_t Meters_Get_CountEndElements();
int32_t Meters_Get_Count();
void Meters_Get_AllBranchesInZone(char*** ResultPtr, int32_t* ResultCount);
int32_t Meters_Get_CountBranches();
double Meters_Get_SAIFI();
int32_t Meters_Get_SequenceIndex();
void Meters_Set_SequenceIndex(int32_t Value);
double Meters_Get_SAIFIKW();
void Meters_DoReliabilityCalc(uint16_t AssumeRestoration);
int32_t Meters_Get_SeqListSize();
int32_t Meters_Get_TotalCustomers();
double Meters_Get_SAIDI();
double Meters_Get_CustInterrupts();
int32_t Meters_Get_NumSections();
void Meters_SetActiveSection(int32_t SectIdx);
double Meters_Get_AvgRepairTime();
double Meters_Get_FaultRateXRepairHrs();
int32_t Meters_Get_NumSectionBranches();
int32_t Meters_Get_NumSectionCustomers();
int32_t Meters_Get_OCPDeviceType();
double Meters_Get_SumBranchFltRates();
int32_t Meters_Get_SectSeqIdx();
int32_t Meters_Get_SectTotalCust();
void Monitors_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
char* Monitors_Get_FileName();
int32_t Monitors_Get_First();
int32_t Monitors_Get_Mode();
char* Monitors_Get_Name();
int32_t Monitors_Get_Next();
void Monitors_Reset();
void Monitors_ResetAll();
void Monitors_Sample();
void Monitors_Save();
void Monitors_Set_Mode(int32_t Value);
void Monitors_Show();
void Monitors_Set_Name(char* Value);
void Monitors_Get_ByteStream(int8_t** ResultPtr, int32_t* ResultCount);
int32_t Monitors_Get_SampleCount();
void Monitors_SampleAll();
void Monitors_SaveAll();
int32_t Monitors_Get_Count();
void Monitors_Process();
void Monitors_ProcessAll();
void Monitors_Get_Channel(double** ResultPtr, int32_t* ResultCount, int32_t Index);
void Monitors_Get_dblFreq(double** ResultPtr, int32_t* ResultCount);
void Monitors_Get_dblHour(double** ResultPtr, int32_t* ResultCount);
int32_t Monitors_Get_FileVersion();
void Monitors_Get_Header(char*** ResultPtr, int32_t* ResultCount);
int32_t Monitors_Get_NumChannels();
int32_t Monitors_Get_RecordSize();
char* Monitors_Get_Element();
void Monitors_Set_Element(char* Value);
int32_t Monitors_Get_Terminal();
void Monitors_Set_Terminal(int32_t Value);
// char* Parser_Get_CmdString();
// void Parser_Set_CmdString(char* Value);
// char* Parser_Get_NextParam();
// uint16_t Parser_Get_AutoIncrement();
// void Parser_Set_AutoIncrement(uint16_t Value);
// double Parser_Get_DblValue();
// int32_t Parser_Get_IntValue();
// char* Parser_Get_StrValue();
// char* Parser_Get_WhiteSpace();
// void Parser_Set_WhiteSpace(char* Value);
// char* Parser_Get_BeginQuote();
// char* Parser_Get_EndQuote();
// void Parser_Set_BeginQuote(char* Value);
// void Parser_Set_EndQuote(char* Value);
// char* Parser_Get_Delimiters();
// void Parser_Set_Delimiters(char* Value);
// void Parser_ResetDelimiters();
// void Parser_Get_Vector(double** ResultPtr, int32_t* ResultCount, int32_t ExpectedSize);
// void Parser_Get_Matrix(double** ResultPtr, int32_t* ResultCount, int32_t ExpectedOrder);
// void Parser_Get_SymMatrix(double** ResultPtr, int32_t* ResultCount, int32_t ExpectedOrder);
int32_t PDElements_Get_Count();
double PDElements_Get_FaultRate();
int32_t PDElements_Get_First();
uint16_t PDElements_Get_IsShunt();
int32_t PDElements_Get_Next();
double PDElements_Get_pctPermanent();
void PDElements_Set_FaultRate(double Value);
void PDElements_Set_pctPermanent(double Value);
char* PDElements_Get_Name();
void PDElements_Set_Name(char* Value);
double PDElements_Get_AccumulatedL();
double PDElements_Get_Lambda();
int32_t PDElements_Get_Numcustomers();
int32_t PDElements_Get_ParentPDElement();
double PDElements_Get_RepairTime();
int32_t PDElements_Get_Totalcustomers();
int32_t PDElements_Get_FromTerminal();
double PDElements_Get_TotalMiles();
int32_t PDElements_Get_SectionID();
void PDElements_Set_RepairTime(double Value);
void PVSystems_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
void PVSystems_Get_RegisterNames(char*** ResultPtr, int32_t* ResultCount);
void PVSystems_Get_RegisterValues(double** ResultPtr, int32_t* ResultCount);
int32_t PVSystems_Get_First();
int32_t PVSystems_Get_Next();
int32_t PVSystems_Get_Count();
int32_t PVSystems_Get_idx();
void PVSystems_Set_idx(int32_t Value);
char* PVSystems_Get_Name();
void PVSystems_Set_Name(char* Value);
double PVSystems_Get_Irradiance();
void PVSystems_Set_Irradiance(double Value);
double PVSystems_Get_kvar();
double PVSystems_Get_kVArated();
double PVSystems_Get_kW();
double PVSystems_Get_PF();
void Reclosers_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
int32_t Reclosers_Get_Count();
int32_t Reclosers_Get_First();
char* Reclosers_Get_Name();
int32_t Reclosers_Get_Next();
void Reclosers_Set_Name(char* Value);
int32_t Reclosers_Get_MonitoredTerm();
void Reclosers_Set_MonitoredTerm(int32_t Value);
char* Reclosers_Get_SwitchedObj();
void Reclosers_Set_SwitchedObj(char* Value);
char* Reclosers_Get_MonitoredObj();
int32_t Reclosers_Get_SwitchedTerm();
void Reclosers_Set_MonitoredObj(char* Value);
void Reclosers_Set_SwitchedTerm(int32_t Value);
int32_t Reclosers_Get_NumFast();
void Reclosers_Get_RecloseIntervals(double** ResultPtr, int32_t* ResultCount);
int32_t Reclosers_Get_Shots();
void Reclosers_Set_NumFast(int32_t Value);
void Reclosers_Set_Shots(int32_t Value);
double Reclosers_Get_PhaseTrip();
void Reclosers_Set_PhaseTrip(double Value);
double Reclosers_Get_GroundInst();
double Reclosers_Get_GroundTrip();
double Reclosers_Get_PhaseInst();
void Reclosers_Set_GroundInst(double Value);
void Reclosers_Set_GroundTrip(double Value);
void Reclosers_Set_PhaseInst(double Value);
void Reclosers_Close();
void Reclosers_Open();
int32_t Reclosers_Get_idx();
void Reclosers_Set_idx(int32_t Value);
void RegControls_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
double RegControls_Get_CTPrimary();
double RegControls_Get_Delay();
int32_t RegControls_Get_First();
double RegControls_Get_ForwardBand();
double RegControls_Get_ForwardR();
double RegControls_Get_ForwardVreg();
double RegControls_Get_ForwardX();
uint16_t RegControls_Get_IsInverseTime();
uint16_t RegControls_Get_IsReversible();
int32_t RegControls_Get_MaxTapChange();
char* RegControls_Get_MonitoredBus();
char* RegControls_Get_Name();
int32_t RegControls_Get_Next();
double RegControls_Get_PTratio();
double RegControls_Get_ReverseBand();
double RegControls_Get_ReverseR();
double RegControls_Get_ReverseVreg();
double RegControls_Get_ReverseX();
double RegControls_Get_TapDelay();
int32_t RegControls_Get_TapWinding();
char* RegControls_Get_Transformer();
double RegControls_Get_VoltageLimit();
int32_t RegControls_Get_Winding();
int32_t RegControls_Get_TapNumber();
void RegControls_Set_CTPrimary(double Value);
void RegControls_Set_Delay(double Value);
void RegControls_Set_ForwardBand(double Value);
void RegControls_Set_ForwardR(double Value);
void RegControls_Set_ForwardVreg(double Value);
void RegControls_Set_ForwardX(double Value);
void RegControls_Set_IsInverseTime(uint16_t Value);
void RegControls_Set_IsReversible(uint16_t Value);
void RegControls_Set_MaxTapChange(int32_t Value);
void RegControls_Set_MonitoredBus(char* Value);
void RegControls_Set_Name(char* Value);
void RegControls_Set_PTratio(double Value);
void RegControls_Set_ReverseBand(double Value);
void RegControls_Set_ReverseR(double Value);
void RegControls_Set_ReverseVreg(double Value);
void RegControls_Set_ReverseX(double Value);
void RegControls_Set_TapDelay(double Value);
void RegControls_Set_TapWinding(int32_t Value);
void RegControls_Set_Transformer(char* Value);
void RegControls_Set_VoltageLimit(double Value);
void RegControls_Set_Winding(int32_t Value);
void RegControls_Set_TapNumber(int32_t Value);
int32_t RegControls_Get_Count();
void RegControls_Reset();
void Relays_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
int32_t Relays_Get_Count();
int32_t Relays_Get_First();
char* Relays_Get_Name();
int32_t Relays_Get_Next();
void Relays_Set_Name(char* Value);
char* Relays_Get_MonitoredObj();
void Relays_Set_MonitoredObj(char* Value);
int32_t Relays_Get_MonitoredTerm();
char* Relays_Get_SwitchedObj();
void Relays_Set_MonitoredTerm(int32_t Value);
void Relays_Set_SwitchedObj(char* Value);
int32_t Relays_Get_SwitchedTerm();
void Relays_Set_SwitchedTerm(int32_t Value);
int32_t Relays_Get_idx();
void Relays_Set_idx(int32_t Value);
void Sensors_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
int32_t Sensors_Get_Count();
void Sensors_Get_Currents(double** ResultPtr, int32_t* ResultCount);
int32_t Sensors_Get_First();
uint16_t Sensors_Get_IsDelta();
void Sensors_Get_kVARS(double** ResultPtr, int32_t* ResultCount);
void Sensors_Get_kVS(double** ResultPtr, int32_t* ResultCount);
void Sensors_Get_kWS(double** ResultPtr, int32_t* ResultCount);
char* Sensors_Get_MeteredElement();
int32_t Sensors_Get_MeteredTerminal();
char* Sensors_Get_Name();
int32_t Sensors_Get_Next();
double Sensors_Get_PctError();
uint16_t Sensors_Get_ReverseDelta();
double Sensors_Get_Weight();
void Sensors_Reset();
void Sensors_ResetAll();
void Sensors_Set_Currents(double* ValuePtr, int32_t ValueCount);
void Sensors_Set_IsDelta(uint16_t Value);
void Sensors_Set_kVARS(double* ValuePtr, int32_t ValueCount);
void Sensors_Set_kVS(double* ValuePtr, int32_t ValueCount);
void Sensors_Set_kWS(double* ValuePtr, int32_t ValueCount);
void Sensors_Set_MeteredElement(char* Value);
void Sensors_Set_MeteredTerminal(int32_t Value);
void Sensors_Set_Name(char* Value);
void Sensors_Set_PctError(double Value);
void Sensors_Set_ReverseDelta(uint16_t Value);
void Sensors_Set_Weight(double Value);
double Sensors_Get_kVbase();
void Sensors_Set_kVbase(double Value);
uint16_t Settings_Get_AllowDuplicates();
char* Settings_Get_AutoBusList();
int32_t Settings_Get_CktModel();
double Settings_Get_EmergVmaxpu();
double Settings_Get_EmergVminpu();
double Settings_Get_NormVmaxpu();
double Settings_Get_NormVminpu();
uint16_t Settings_Get_ZoneLock();
void Settings_Set_AllocationFactors(double Value);
void Settings_Set_AllowDuplicates(uint16_t Value);
void Settings_Set_AutoBusList(char* Value);
void Settings_Set_CktModel(int32_t Value);
void Settings_Set_EmergVmaxpu(double Value);
void Settings_Set_EmergVminpu(double Value);
void Settings_Set_NormVmaxpu(double Value);
void Settings_Set_NormVminpu(double Value);
void Settings_Set_ZoneLock(uint16_t Value);
void Settings_Get_LossRegs(int32_t** ResultPtr, int32_t* ResultCount);
double Settings_Get_LossWeight();
uint16_t Settings_Get_Trapezoidal();
void Settings_Get_UEregs(int32_t** ResultPtr, int32_t* ResultCount);
double Settings_Get_UEweight();
void Settings_Set_LossRegs(int32_t* ValuePtr, int32_t ValueCount);
void Settings_Set_LossWeight(double Value);
void Settings_Set_Trapezoidal(uint16_t Value);
void Settings_Set_UEregs(int32_t* ValuePtr, int32_t ValueCount);
void Settings_Set_UEweight(double Value);
uint16_t Settings_Get_ControlTrace();
void Settings_Get_VoltageBases(double** ResultPtr, int32_t* ResultCount);
void Settings_Set_ControlTrace(uint16_t Value);
void Settings_Set_VoltageBases(double* ValuePtr, int32_t ValueCount);
char* Settings_Get_PriceCurve();
double Settings_Get_PriceSignal();
void Settings_Set_PriceCurve(char* Value);
void Settings_Set_PriceSignal(double Value);
double Solution_Get_Frequency();
int32_t Solution_Get_Hour();
int32_t Solution_Get_Iterations();
double Solution_Get_LoadMult();
int32_t Solution_Get_MaxIterations();
int32_t Solution_Get_Mode();
int32_t Solution_Get_Number();
int32_t Solution_Get_Random();
double Solution_Get_Seconds();
double Solution_Get_StepSize();
double Solution_Get_Tolerance();
int32_t Solution_Get_Year();
void Solution_Set_Frequency(double Value);
void Solution_Set_Hour(int32_t Value);
void Solution_Set_LoadMult(double Value);
void Solution_Set_MaxIterations(int32_t Value);
void Solution_Set_Mode(int32_t Mode);
void Solution_Set_Number(int32_t Value);
void Solution_Set_Random(int32_t Random);
void Solution_Set_Seconds(double Value);
void Solution_Set_StepSize(double Value);
void Solution_Set_Tolerance(double Value);
void Solution_Set_Year(int32_t Value);
void Solution_Solve();
char* Solution_Get_ModeID();
int32_t Solution_Get_LoadModel();
void Solution_Set_LoadModel(int32_t Value);
char* Solution_Get_LDCurve();
void Solution_Set_LDCurve(char* Value);
double Solution_Get_pctGrowth();
void Solution_Set_pctGrowth(double Value);
int32_t Solution_Get_AddType();
void Solution_Set_AddType(int32_t Value);
double Solution_Get_GenkW();
void Solution_Set_GenkW(double Value);
double Solution_Get_GenPF();
void Solution_Set_GenPF(double Value);
double Solution_Get_Capkvar();
void Solution_Set_Capkvar(double Value);
int32_t Solution_Get_Algorithm();
void Solution_Set_Algorithm(int32_t Value);
int32_t Solution_Get_ControlMode();
void Solution_Set_ControlMode(int32_t Value);
double Solution_Get_GenMult();
void Solution_Set_GenMult(double Value);
char* Solution_Get_DefaultDaily();
char* Solution_Get_DefaultYearly();
void Solution_Set_DefaultDaily(char* Value);
void Solution_Set_DefaultYearly(char* Value);
void Solution_Get_EventLog(char*** ResultPtr, int32_t* ResultCount);
double Solution_Get_dblHour();
void Solution_Set_dblHour(double Value);
void Solution_Set_StepsizeHr(double Value);
void Solution_Set_StepsizeMin(double Value);
int32_t Solution_Get_ControlIterations();
int32_t Solution_Get_MaxControlIterations();
void Solution_Sample_DoControlActions();
void Solution_Set_ControlIterations(int32_t Value);
void Solution_Set_MaxControlIterations(int32_t Value);
void Solution_CheckFaultStatus();
void Solution_SolveDirect();
void Solution_SolveNoControl();
void Solution_SolvePflow();
void Solution_SolvePlusControl();
void Solution_SolveSnap();
void Solution_CheckControls();
void Solution_InitSnap();
uint16_t Solution_Get_SystemYChanged();
void Solution_BuildYMatrix(int32_t BuildOption, int32_t AllocateVI);
void Solution_DoControlActions();
void Solution_SampleControlDevices();
uint16_t Solution_Get_Converged();
void Solution_Set_Converged(uint16_t Value);
int32_t Solution_Get_Totaliterations();
int32_t Solution_Get_MostIterationsDone();
uint16_t Solution_Get_ControlActionsDone();
void Solution_Set_ControlActionsDone(uint16_t Value);
void Solution_Cleanup();
void Solution_FinishTimeStep();
double Solution_Get_Process_Time();
double Solution_Get_Total_Time();
void Solution_Set_Total_Time(double Value);
double Solution_Get_Time_of_Step();
double Solution_Get_IntervalHrs();
void Solution_Set_IntervalHrs(double Value);
int32_t Solution_Get_MinIterations();
void Solution_Set_MinIterations(int32_t Value);
int32_t SwtControls_Get_Action();
void SwtControls_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
double SwtControls_Get_Delay();
int32_t SwtControls_Get_First();
uint16_t SwtControls_Get_IsLocked();
char* SwtControls_Get_Name();
int32_t SwtControls_Get_Next();
char* SwtControls_Get_SwitchedObj();
int32_t SwtControls_Get_SwitchedTerm();
void SwtControls_Set_Action(int32_t Value);
void SwtControls_Set_Delay(double Value);
void SwtControls_Set_IsLocked(uint16_t Value);
void SwtControls_Set_Name(char* Value);
void SwtControls_Set_SwitchedObj(char* Value);
void SwtControls_Set_SwitchedTerm(int32_t Value);
int32_t SwtControls_Get_Count();
int32_t SwtControls_Get_NormalState();
void SwtControls_Set_NormalState(int32_t Value);
int32_t SwtControls_Get_State();
void SwtControls_Set_State(int32_t Value);
void SwtControls_Reset();
char* Text_Get_Command();
void Text_Set_Command(char* Value);
char* Text_Get_Result();
int32_t Topology_Get_NumLoops();
int32_t Topology_Get_ActiveBranch();
void Topology_Get_AllIsolatedBranches(char*** ResultPtr, int32_t* ResultCount);
void Topology_Get_AllLoopedPairs(char*** ResultPtr, int32_t* ResultCount);
int32_t Topology_Get_BackwardBranch();
char* Topology_Get_BranchName();
int32_t Topology_Get_First();
int32_t Topology_Get_ForwardBranch();
int32_t Topology_Get_LoopedBranch();
int32_t Topology_Get_Next();
int32_t Topology_Get_NumIsolatedBranches();
int32_t Topology_Get_ParallelBranch();
void Topology_Set_BranchName(char* Value);
void Topology_Get_AllIsolatedLoads(char*** ResultPtr, int32_t* ResultCount);
int32_t Topology_Get_FirstLoad();
int32_t Topology_Get_NextLoad();
int32_t Topology_Get_NumIsolatedLoads();
int32_t Topology_Get_ActiveLevel();
char* Topology_Get_BusName();
void Topology_Set_BusName(char* Value);
void Transformers_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
int32_t Transformers_Get_First();
uint16_t Transformers_Get_IsDelta();
double Transformers_Get_kV();
double Transformers_Get_kVA();
double Transformers_Get_MaxTap();
double Transformers_Get_MinTap();
char* Transformers_Get_Name();
int32_t Transformers_Get_Next();
int32_t Transformers_Get_NumTaps();
int32_t Transformers_Get_NumWindings();
double Transformers_Get_R();
double Transformers_Get_Rneut();
double Transformers_Get_Tap();
int32_t Transformers_Get_Wdg();
char* Transformers_Get_XfmrCode();
double Transformers_Get_Xhl();
double Transformers_Get_Xht();
double Transformers_Get_Xlt();
double Transformers_Get_Xneut();
void Transformers_Set_IsDelta(uint16_t Value);
void Transformers_Set_kV(double Value);
void Transformers_Set_kVA(double Value);
void Transformers_Set_MaxTap(double Value);
void Transformers_Set_MinTap(double Value);
void Transformers_Set_Name(char* Value);
void Transformers_Set_NumTaps(int32_t Value);
void Transformers_Set_NumWindings(int32_t Value);
void Transformers_Set_R(double Value);
void Transformers_Set_Rneut(double Value);
void Transformers_Set_Tap(double Value);
void Transformers_Set_Wdg(int32_t Value);
void Transformers_Set_XfmrCode(char* Value);
void Transformers_Set_Xhl(double Value);
void Transformers_Set_Xht(double Value);
void Transformers_Set_Xlt(double Value);
void Transformers_Set_Xneut(double Value);
int32_t Transformers_Get_Count();
void Vsources_Get_AllNames(char*** ResultPtr, int32_t* ResultCount);
int32_t Vsources_Get_Count();
int32_t Vsources_Get_First();
int32_t Vsources_Get_Next();
char* Vsources_Get_Name();
void Vsources_Set_Name(char* Value);
double Vsources_Get_BasekV();
double Vsources_Get_pu();
void Vsources_Set_BasekV(double Value);
void Vsources_Set_pu(double Value);
double Vsources_Get_AngleDeg();
double Vsources_Get_Frequency();
int32_t Vsources_Get_Phases();
void Vsources_Set_AngleDeg(double Value);
void Vsources_Set_Frequency(double Value);
void Vsources_Set_Phases(int32_t Value);
int32_t XYCurves_Get_Count();
int32_t XYCurves_Get_First();
char* XYCurves_Get_Name();
int32_t XYCurves_Get_Next();
void XYCurves_Set_Name(char* Value);
int32_t XYCurves_Get_Npts();
void XYCurves_Get_Xarray(double** ResultPtr, int32_t* ResultCount);
void XYCurves_Set_Npts(int32_t Value);
void XYCurves_Set_Xarray(double* ValuePtr, int32_t ValueCount);
double XYCurves_Get_x();
double XYCurves_Get_y();
void XYCurves_Get_Yarray(double** ResultPtr, int32_t* ResultCount);
void XYCurves_Set_x(double Value);
void XYCurves_Set_y(double Value);
double XYCurves_Get_Xscale();
double XYCurves_Get_Xshift();
double XYCurves_Get_Yscale();
double XYCurves_Get_Yshift();
void XYCurves_Set_Xscale(double Value);
void XYCurves_Set_Xshift(double Value);
void XYCurves_Set_Yscale(double Value);
void XYCurves_Set_Yshift(double Value);

void YMatrix_GetCompressedYMatrix(uint16_t factor, uint32_t *nBus, uint32_t *nNz, int32_t **ColPtr, int32_t **RowIdxPtr, double **cValsPtr);
void YMatrix_ZeroInjCurr();
void YMatrix_GetSourceInjCurrents();
void YMatrix_GetPCInjCurr();
void YMatrix_BuildYMatrixD(int32_t BuildOps, int32_t AllocateVI);
void YMatrix_AddInAuxCurrents(int32_t SType);
void YMatrix_getIpointer(double **IvectorPtr);
void YMatrix_getVpointer(double **VvectorPtr);
int32_t YMatrix_SolveSystem(double **NodeVPtr);
void YMatrix_Set_SystemYChanged(uint16_t arg);
uint16_t YMatrix_Get_SystemYChanged();
void YMatrix_Set_UseAuxCurrents(uint16_t arg);
uint16_t YMatrix_Get_UseAuxCurrents();

void decompress_complex_csc_matrix(int32_t nrows, int32_t ncols, int32_t *col_ptrs, int32_t *col_indices, double* complex_vals, double* complex_output);
void dss_custom_update_loads(int *idx, double *kw, size_t count);
void dss_custom_enable_loads(int *idx, int enabled, size_t count);
void dss_custom_line_currents(double *line_norm_amps, int *line_nodes, double* Ia, double* Ib, double* Ic, double* In);